// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for homepage documents */
interface HomepageDocumentData {
    /**
     * title field in *homepage*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Slice Zone field in *homepage*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<HomepageDocumentDataSlicesSlice>;
}
/**
 * Slice for *homepage → Slice Zone*
 *
 */
type HomepageDocumentDataSlicesSlice = FirstBlocSlice | AllInOneSlice;
/**
 * homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<HomepageDocumentData>, "homepage", Lang>;
/** Content for page documents */
interface PageDocumentData {
    /**
     * title field in *page*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: page.title
     * - **Tab**: main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Slice Zone field in *page*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: page.slices[]
     * - **Tab**: main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<PageDocumentDataSlicesSlice>;
}
/**
 * Slice for *page → Slice Zone*
 *
 */
type PageDocumentDataSlicesSlice = FirstBlocSlice;
/**
 * page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;
/** Content for test type documents */
interface TestTypeDocumentData {
    /**
     * Slice Zone field in *test type*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: test_type.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<TestTypeDocumentDataSlicesSlice>;
}
/**
 * Slice for *test type → Slice Zone*
 *
 */
type TestTypeDocumentDataSlicesSlice = FirstBlocSlice | AllInOneSlice;
/**
 * test type document from Prismic
 *
 * - **API ID**: `test_type`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TestTypeDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<TestTypeDocumentData>, "test_type", Lang>;
export type AllDocumentTypes = HomepageDocument | PageDocument | TestTypeDocument;
/**
 * Primary content in AllInOne → Primary
 *
 */
interface AllInOneSliceDefaultPrimary {
    /**
     * Title field in *AllInOne → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: all_in_one.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *AllInOne → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: all_in_one.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Item in AllInOne → Items
 *
 */
export interface AllInOneSliceDefaultItem {
    /**
     * ImageText field in *AllInOne → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].imagetext
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    imagetext: prismicT.ImageField<never>;
    /**
     * Title field in *AllInOne → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].title
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Description field in *AllInOne → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Image field in *AllInOne → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
    /**
     * Pins field in *AllInOne → Items*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: all_in_one.items[].pins
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    pins: prismicT.BooleanField;
    /**
     * BottonText field in *AllInOne → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].bottontext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    bottontext: prismicT.KeyTextField;
    /**
     * Button field in *AllInOne → Items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].button
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    button: prismicT.LinkField;
    /**
     * ButtonItem00 field in *AllInOne → Items*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: all_in_one.items[].buttonitem00
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    buttonitem00: prismicT.BooleanField;
    /**
     * Item00 field in *AllInOne → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].item00
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    item00: prismicT.KeyTextField;
    /**
     * ButtonItem01 field in *AllInOne → Items*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: all_in_one.items[].buttonitem01
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    buttonitem01: prismicT.BooleanField;
    /**
     * Item01 field in *AllInOne → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].item01
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    item01: prismicT.KeyTextField;
    /**
     * ButtonItem02 field in *AllInOne → Items*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: all_in_one.items[].buttonitem02
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    buttonitem02: prismicT.BooleanField;
    /**
     * Item02 field in *AllInOne → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].item02
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    item02: prismicT.KeyTextField;
    /**
     * ButtonItem03 field in *AllInOne → Items*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: all_in_one.items[].buttonitem03
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    buttonitem03: prismicT.BooleanField;
    /**
     * Item03 field in *AllInOne → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: all_in_one.items[].item03
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    item03: prismicT.KeyTextField;
}
/**
 * Default variation for AllInOne Slice
 *
 * - **API ID**: `default`
 * - **Description**: `AllInOne`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type AllInOneSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<AllInOneSliceDefaultPrimary>, Simplify<AllInOneSliceDefaultItem>>;
/**
 * Slice variation for *AllInOne*
 *
 */
type AllInOneSliceVariation = AllInOneSliceDefault;
/**
 * AllInOne Shared Slice
 *
 * - **API ID**: `all_in_one`
 * - **Description**: `AllInOne`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type AllInOneSlice = prismicT.SharedSlice<"all_in_one", AllInOneSliceVariation>;
/**
 * Primary content in GetinTouch → Primary
 *
 */
interface FirstBlocSliceDefaultPrimary {
    /**
     * Title field in *GetinTouch → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: first_bloc.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Text1 field in *GetinTouch → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: first_bloc.primary.Text1
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    Text1: prismicT.TitleField;
    /**
     * Image1 field in *GetinTouch → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: first_bloc.primary.image1
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image1: prismicT.ImageField<never>;
    /**
     * Image2 field in *GetinTouch → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: first_bloc.primary.image2
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image2: prismicT.ImageField<never>;
    /**
     * TextunderTitle field in *GetinTouch → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: first_bloc.primary.sidetext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    sidetext: prismicT.KeyTextField;
    /**
     * BottonLik field in *GetinTouch → Primary*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: first_bloc.primary.bottonlik
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    bottonlik: prismicT.LinkField;
    /**
     * Get In touch Title field in *GetinTouch → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: first_bloc.primary.get_in_touch_title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    get_in_touch_title: prismicT.RichTextField;
}
/**
 * Default variation for GetinTouch Slice
 *
 * - **API ID**: `default`
 * - **Description**: `FirstBloc`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type FirstBlocSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<FirstBlocSliceDefaultPrimary>, never>;
/**
 * Slice variation for *GetinTouch*
 *
 */
type FirstBlocSliceVariation = FirstBlocSliceDefault;
/**
 * GetinTouch Shared Slice
 *
 * - **API ID**: `first_bloc`
 * - **Description**: `FirstBloc`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type FirstBlocSlice = prismicT.SharedSlice<"first_bloc", FirstBlocSliceVariation>;
/**
 * Primary content in TestSlice → Primary
 *
 */
interface TestSliceSliceDefaultPrimary {
    /**
     * Title field in *TestSlice → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: test_slice.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *TestSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: test_slice.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * sens field in *TestSlice → Primary*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: test_slice.primary.sens
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    sens: prismicT.BooleanField;
    /**
     * rzt field in *TestSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: test_slice.primary.rzt
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    rzt: prismicT.RichTextField;
}
/**
 * Default variation for TestSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: `TestSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TestSliceSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<TestSliceSliceDefaultPrimary>, never>;
/**
 * Slice variation for *TestSlice*
 *
 */
type TestSliceSliceVariation = TestSliceSliceDefault;
/**
 * TestSlice Shared Slice
 *
 * - **API ID**: `test_slice`
 * - **Description**: `TestSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type TestSliceSlice = prismicT.SharedSlice<"test_slice", TestSliceSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { HomepageDocumentData, HomepageDocumentDataSlicesSlice, HomepageDocument, PageDocumentData, PageDocumentDataSlicesSlice, PageDocument, TestTypeDocumentData, TestTypeDocumentDataSlicesSlice, TestTypeDocument, AllDocumentTypes, AllInOneSliceDefaultPrimary, AllInOneSliceDefaultItem, AllInOneSliceDefault, AllInOneSliceVariation, AllInOneSlice, FirstBlocSliceDefaultPrimary, FirstBlocSliceDefault, FirstBlocSliceVariation, FirstBlocSlice, TestSliceSliceDefaultPrimary, TestSliceSliceDefault, TestSliceSliceVariation, TestSliceSlice };
    }
}
